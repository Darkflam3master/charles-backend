name: Charles-Backend CI/CD

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main # Trigger on pull requests targeting the main branch

jobs:
  # Job 1: Build and test the application
  build_and_test:
    runs-on: ubuntu-latest # The environment to run the job

    steps:
      # Step 1: Checkout the code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js (Node version 16, you can use your required version)
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.13.1'

      # Step 3: Install dependencies using npm
      - name: Install dependencies
        run: npm install

      # Step 4: Run unit tests (with code coverage)
      - name: Run tests
        run: npm run test -- --coverage --passWithNoTests

  # Job 2: Build the Docker image
  docker_build:
    needs: build_and_test # This job depends on the success of the build_and_test job
    runs-on: ubuntu-latest # The environment to run the job
    outputs:
      COMMIT_HASH: ${{ steps.vars.outputs.COMMIT_HASH }}

    steps:
      # Step 1: Checkout the code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Generate Docker tag using the latest commit hash
      - name: Generate Docker tag
        id: vars
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV
          echo "::set-output name=COMMIT_HASH::$COMMIT_HASH"
          echo "Docker tag will be: darkflam3m4ster/charles-backend:$COMMIT_HASH"

      # Step 3: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t darkflam3m4ster/charles-backend:${{ env.COMMIT_HASH }} .

  # Job 3: Push Docker image to Docker Hub
  docker_push:
    needs: docker_build # This job depends on the success of the docker_build job
    runs-on: ubuntu-latest # The environment to run the job

    steps:
      # Step 1: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # Step 2: Push the Docker image to Docker Hub
      - name: Push Docker image
        run: |
          echo "Tagging Docker image with commit hash: ${{ needs.docker_build.outputs.COMMIT_HASH }}"
          docker push darkflam3m4ster/charles-backend:${{ needs.docker_build.outputs.COMMIT_HASH }}
