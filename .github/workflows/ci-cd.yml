name: Charles-Backend CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.13.1'

      - name: Install dependencies
        run: npm install

      - name: Run build command
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-charles
          path: dist

  unit-test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: built-charles

      - name: Run unit tests
        run: npm run test -- --coverage

  e2e-test:
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: built-charles

      - name: Run end to end tests
        run: npm run test:e2e -- --coverage

  docker_deploy:
    needs: e2e-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate Docker tag
        id: docker_tag
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD) # <--using latest git commit as tag version ID
          echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV  # <-- Set commit hash as environment variable for this job
          echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build -t darkflam3m4ster/charles-backend:${{ env.COMMIT_HASH }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Push Docker image
        run: |
          echo "Tagging Docker image with commit hash: ${{ env.COMMIT_HASH }}"
          docker push darkflam3m4ster/charles-backend:${{ env.COMMIT_HASH }}
    outputs:
      commit_hash: ${{ steps.docker_tag.outputs.COMMIT_HASH }}

  heroku_deploy:
    needs: docker_deploy
    runs-on: ubuntu-latest

    steps:
      - name: Pull image from DockerHub
        run: docker pull darkflam3m4ster/charles-backend:${{ needs.docker_deploy.outputs.commit_hash }}
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Log in to Heroku Container Registry
        run: |
          echo "machine api.heroku.com" > ~/.netrc
          echo "  login ${{ secrets.HEROKU_EMAIL }}" >> ~/.netrc
          echo "  password ${{ secrets.HEROKU_KEY }}" >> ~/.netrc
          heroku container:login

      - name: Set Heroku Config Vars
        run: |
          heroku config:set \
          DATABASE_URL=${{ secrets.DATABASE_URL }} \
          ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }} \
          REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }} \
          API_KEY=${{ secrets.HEROKU_KEY }} \
          --app charles-backend

      - name: Tag Docker image for Heroku
        run: docker tag darkflam3m4ster/charles-backend:${{ needs.docker_deploy.outputs.commit_hash  }} registry.heroku.com/charles-backend/web # Replace with your app name

      - name: Push Docker image to Heroku
        run: docker push registry.heroku.com/charles-backend/web

      - name: Release Docker image on Heroku
        run: heroku container:release web --app charles-backend
