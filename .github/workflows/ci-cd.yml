name: Charles-Backend CI/CD

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main # Trigger on pull requests targeting the main branch

jobs:
  # Job 1: Build and test the application
  build_and_test:
    runs-on: ubuntu-latest # The environment to run the job

    steps:
      # Step 1: Checkout the code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js (Node version 16, you can use your required version)
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.13.1'

      # Step 3: Install dependencies using npm
      - name: Install dependencies
        run: npm install

      # Step 4: Run unit tests (with code coverage)
      - name: Run tests
        run: npm run test -- --coverage

  # Job 2: Build the Docker image
  docker_deploy:
    needs: build_and_test # This job depends on the success of the build_and_test job
    runs-on: ubuntu-latest # The environment to run the job

    steps:
      # Step 1: Checkout the code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Generate Docker tag using the latest commit hash
      - name: Generate Docker tag
        id: docker_tag
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV  # <-- Set commit hash as environment variable for this job
          echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_OUTPUT

      # Step 3: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t darkflam3m4ster/charles-backend:${{ env.COMMIT_HASH }} .

      # Step 4: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # Step 5: Push the Docker image to Docker Hub
      - name: Push Docker image
        run: |
          echo "Tagging Docker image with commit hash: ${{ env.COMMIT_HASH }}"
          docker push darkflam3m4ster/charles-backend:${{ env.COMMIT_HASH }}

  heroku_deploy:
    needs: docker_deploy # This job depends on the success of the build_and_test job
    runs-on: ubuntu-latest # The environment to run the job

    steps:
      - name: Pull image from DockerHub
        run: docker pull darkflam3m4ster/charles-backend:${{ steps.docker_tag.outputs.COMMIT_HASH }}
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Log in to Heroku Container Registry
        run: |
          echo "machine api.heroku.com" > ~/.netrc
          echo "  login ${{ secrets.HEROKU_EMAIL }}" >> ~/.netrc
          echo "  password ${{ secrets.HEROKU_KEY }}" >> ~/.netrc
          heroku container:login

      - name: Set Heroku Config Vars
        run: |
          heroku config:set \
          DATABASE_URL=${{ secrets.DATABASE_URL }} \
          ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }} \
          REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }} \
          API_KEY=${{ secrets.HEROKU_KEY }} \
          --app charles-backend

      - name: Tag Docker image for Heroku
        run: docker tag darkflam3m4ster/charles-backend:${{ steps.docker_tag.ouputs.COMMIT_HASH }} registry.heroku.com/charles-backend/web # Replace with your app name

      - name: Push Docker image to Heroku
        run: docker push registry.heroku.com/charles-backend/web # Replace with your app name

      - name: Release Docker image on Heroku
        run: heroku container:release web --app charles-backend
